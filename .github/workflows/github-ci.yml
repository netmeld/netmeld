name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Core:
    runs-on: ubuntu-latest
    container: netmeld/netmeld-dev:latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Configure All
      run: cmake -S . -B build

    - name: Build Core
      run: cmake --build build -j 2 --target netmeld-core

    - name: Test Core
      run: |
        cmake --build build -j 2 --target Test.netmeld-core
        cd build
        ctest -L ^Test.netmeld-core$
    
    - name: Package Core
      run: |
        cd ./scripts
        bash ./make_netmeld-core_deb.sh
        cd ..
    
    - name: Upload Deb Artifact
      uses: actions/upload-artifact@v2
      with:
        name: netmeld-core-deb
        path: scripts/*.deb
  
  
  CoreModules:
    needs: [Core]
    
    runs-on: ubuntu-latest
    container: netmeld/netmeld-dev:latest

    strategy:
      matrix:
        core-modules: [playbook-core, datalake-core]

    steps:
    - uses: actions/checkout@v2

    - name: Configure All
      run: cmake -S . -B build

    - name: Build Core Modules
      run: cmake --build build -j 2 --target netmeld-${{ matrix.core-modules }}

    - name: Test Core Modules
      run: |
        cmake --build build -j 2 --target Test.netmeld-${{ matrix.core-modules }}
        cd build
        ctest -L ^Test.netmeld-${{ matrix.core-modules }}$
    
    - name: Package Core Modules
      if: matrix.core-modules != 'datalake-core'
      run: |
        cd ./scripts
        bash ./make_netmeld-${{ matrix.core-modules }}_deb.sh
        cd ..
    
    - name: Upload Deb Artifact
      if: matrix.core-modules != 'datalake-core'
      uses: actions/upload-artifact@v2
      with:
        name: netmeld-${{ matrix.core-modules }}-deb
        path: scripts/*.deb
  
  
  Modules:
    needs: [Core, CoreModules]
    
    runs-on: ubuntu-latest
    container: netmeld/netmeld-dev:latest

    strategy:
      matrix:
        modules: [core-bin, playbook, datalake, clw, exporters, fetchers, graphers, importers, inserters]
       
    steps:
    - uses: actions/checkout@v2

    - name: Configure All
      run: cmake -S . -B build

    - name: Build Modules
      run: cmake --build build -j 2 --target netmeld-${{ matrix.modules }}

    - name: Test Modules
      run: |
        cmake --build build -j 2 --target Test.netmeld-${{ matrix.modules }}
        cd build
        ctest -L ^Test.netmeld-${{ matrix.modules }}$
    
    - name: Package Modules
      if: matrix.modules != 'datalake'
      run: |
        cd ./scripts
        bash ./make_netmeld-${{ matrix.modules }}_deb.sh
        cd ..
    
    - name: Upload Deb Artifact
      if: matrix.modules != 'datalake'
      uses: actions/upload-artifact@v2
      with:
        name: netmeld-${{ matrix.modules }}-deb
        path: scripts/*.deb


  PackageAll:
    needs: [Core, CoreModules, Modules]

    runs-on: ubuntu-latest
    
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v2
      
      - name: Prepare For Packaging
        run: |
          echo ::set-env name=DATETIME::$(date +%Y%m%d.%H%M%S)
          find . -iname "*.deb" -print | zip --junk-paths artifacts -@
      
      - name: Upload All Debs Artifact
        uses: actions/upload-artifact@v2
        with:
          name: all-debs
          path: artifacts.zip
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.DATETIME }}
          release_name: CI build - ${{ env.DATETIME }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts.zip
          asset_name: netmeld-${{ env.DATETIME }}-debs.zip
          asset_content_type: application/zip
